services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: image_processing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbit:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    command: ["uv", "run", "python", "-m", "app.api.main"]
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/image_processing
      - RABBITMQ_URL=amqp://rabbitmq:rabbitmq@rabbitmq:5672/
      - UPLOAD_DIR=/app/uploads
      - LOG_LEVEL=INFO
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  worker:
    build: .
    command: ["uv", "run", "python", "-m", "app.worker.main"]
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/image_processing
      - RABBITMQ_URL=amqp://rabbitmq:rabbitmq@rabbitmq:5672/
      - UPLOAD_DIR=/app/uploads
      - LOG_LEVEL=INFO
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    scale: 2

volumes:
  postgres_data:
  rabbitmq_data:
